name: Test

on:
  push:
    branches:
      - develop
      - master
  pull_request:

jobs:
  cpp-linux-x64:
    name: "C++ tests (gcc-clang/Linux/x64)"
    # Starting with Ubuntu 24.04.1, the compilation of libQASM fails
    # So this job cannot be run on ubuntu-latest until we have the compilation of libQASM is fixed
    # When moving to Ubuntu 24.04.1, please notice that it may be needed to install libc++-dev and libc++-abi-dev
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        build_type:
          - Debug
          - Release
        compiler:
          - clang
          - gcc
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: ./.github/actions/cpp-tests
        with:
          build_type: ${{ matrix.build_type }}
          conan_profile_host: conan/profiles/tests-${{ matrix.build_type }}-${{ matrix.compiler }}-linux-x64
          conan_profile_build: conan/profiles/tests-${{ matrix.build_type }}-${{ matrix.compiler }}-linux-x64
          shell: bash

  cpp-linux-arm64:
    name: "C++ tests (gcc/Linux/ARM64)"
    runs-on: [self-hosted, ARM64, Linux]
    container: python:3.11
    # Run only when merging to develop
    # (until we have a GitHub-hosted runner for Linux/ARM64)
    if: github.ref == 'refs/heads/develop'
    strategy:
      fail-fast: false
      matrix:
        build_type:
          - Debug
          - Release
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        # We are having problems when using zulu-opendjk Conan package on an armv8 architecture.
        # zulu-openjdk provides the Java JRE required by the ANTLR generator.
        # So, for the time being, we are installing Java manually for this platform
      - name: Install dependencies
        run: |
          apt-get update
          apt-get install -y default-jre pipx
        # Add Conan to path (even before it is installed)
      - name: Add Conan to path
        run: |
          echo "${HOME}/.local/bin" >> $GITHUB_PATH
      - uses: ./.github/actions/cpp-tests
        with:
          build_type: ${{ matrix.build_type }}
          conan_profile_host: conan/profiles/tests-${{ matrix.build_type }}-gcc-linux-arm64
          conan_profile_build: conan/profiles/tests-${{ matrix.build_type }}-gcc-linux-arm64
          shell: bash

  cpp-macos-x64:
    name: "C++ tests (clang/MacOS/x64)"
    runs-on: macos-13  # x64
    strategy:
      fail-fast: false
      matrix:
        build_type:
          - Debug
          - Release
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: ./.github/actions/cpp-tests
        with:
          build_type: ${{ matrix.build_type }}
          conan_profile_host: conan/profiles/tests-${{ matrix.build_type }}-apple_clang-macos-x64
          conan_profile_build: conan/profiles/tests-${{ matrix.build_type }}-apple_clang-macos-x64
          shell: bash

  cpp-macos-arm64:
    name: "C++ tests (clang/macos/ARM64)"
    runs-on: macos-14  # arm64
    strategy:
      fail-fast: false
      matrix:
        build_type:
          - Debug
          - Release
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: ./.github/actions/cpp-tests
        with:
          build_type: ${{ matrix.build_type }}
          conan_profile_host: conan/profiles/tests-${{ matrix.build_type }}-apple_clang-macos-arm64
          conan_profile_build: conan/profiles/tests-${{ matrix.build_type }}-apple_clang-macos-arm64
          shell: bash

  cpp-windows-x64:
    name: "C++ tests (msvc/Windows/x64)"
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        build_type:
          - Debug
          - Release
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: ./.github/actions/cpp-tests
        with:
          build_type: ${{ matrix.build_type }}
          conan_profile_host: conan/profiles/tests-${{ matrix.build_type }}-msvc-windows-x64
          conan_profile_build: conan/profiles/tests-${{ matrix.build_type }}-msvc-windows-x64
          shell: bash

  python-linux-x64:
    name: "Python tests (Linux/x64)"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install SWIG
        run: |
          sudo apt-get install -y swig
        shell: bash
      - uses: ./.github/actions/python-tests
        with:
          shell: bash

  python-macos-x64:
    name: "Python tests (macOS/x64)"
    runs-on: macos-13
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install SWIG
        run: |
          brew install swig
        shell: bash
      - uses: ./.github/actions/python-tests
        with:
          shell: bash

  python-macos-arm64:
    name: "Python tests (macOS/arm64)"
    runs-on: macos-14
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          brew install swig
        shell: bash
      - uses: ./.github/actions/python-tests
        with:
          shell: bash

  python-windows-x64:
    name: "Python tests (Windows/x64)"
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: ./.github/actions/python-tests
        with:
          shell: bash

  complete:
    # see https://github.community/t/status-check-for-a-matrix-jobs/127354/7
    name: Report status
    needs:
      - cpp-linux-x64
      - cpp-macos-x64
      - cpp-windows-x64
      - cpp-linux-arm64
      - cpp-macos-arm64
      - python-linux-x64
      - python-macos-x64
      - python-macos-arm64
      - python-windows-x64
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
      - name: Check all job status
        # see https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#needs-context
        # see https://stackoverflow.com/a/67532120/4907315
        if: >-
          ${{
               contains(needs.*.result, 'failure')
            || contains(needs.*.result, 'cancelled')
            || (
                    github.ref != 'refs/heads/develop'
                 && contains(needs.*.result, 'skipped')
                 && !contains(needs.cpp-linux-arm64.result, 'skipped')
               )
            ||
               (
                    github.ref == 'refs/heads/develop'
                 && contains(needs.*.result, 'skipped')
               )
          }}
        run: exit 1
