name: Test

on:
  push:
    branches:
      - develop
  pull_request:

jobs:
  cpp-linux-x64:
    name: "C++ tests (gcc-clang/Linux/x64)"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        build_type:
          - Debug
          - Release
        compiler:
          - clang++
          - g++
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: ./.github/actions/cpp-tests
        with:
          compilers: ${{ matrix.compiler }}
          build_type: ${{ matrix.build_type }}
          shell: bash

  cpp-macos-x64:
    name: "C++ tests (clang/MacOS/x64)"
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        build_type:
          - Debug
          - Release
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install flex/bison
        run: |
          brew install flex bison
          echo "$(brew --prefix flex)/bin" >> $GITHUB_PATH
          echo "$(brew --prefix bison)/bin" >> $GITHUB_PATH
      - uses: ./.github/actions/cpp-tests
        with:
          compilers: clang++
          build_type: ${{ matrix.build_type }}
          shell: bash

  cpp-windows-x64:
    name: "C++ tests (msvc/Windows/x64)"
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        build_type:
          - Debug
          - Release
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Winflexbison3
        run: choco install winflexbison3 --version 2.5.24.20210105
        shell: powershell
      - uses: ./.github/actions/cpp-tests
        with:
          compilers: msvc
          build_type: ${{ matrix.build_type }}
          shell: powershell

  cpp-linux-arm64:
    name: "C++ tests (gcc/Linux/ARM64)"
    runs-on: [self-hosted, ARM64, Linux]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install flex/bison, and gcc
        run: |
          sudo apt-get -y update
          sudo apt-get -y upgrade
          sudo apt-get -y install flex bison gcc
        shell: bash
      - uses: ./.github/actions/cpp-tests
        with:
          compilers: g++
          build_type: Release
          shell: bash

  cpp-macos-arm64:
    name: "C++ tests (clang/macos/ARM64)"
    runs-on: [self-hosted, ARM64, macOS]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install flex/bison, and gcc (MacOS)
        run: |
          brew install flex bison gcc
          echo "$(brew --prefix flex)/bin" >> $GITHUB_PATH
          echo "$(brew --prefix bison)/bin" >> $GITHUB_PATH
        shell: bash
      - uses: ./.github/actions/cpp-tests
        with:
          compilers: clang++
          build_type: Release
          shell: bash

  python:
    name: Python
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install Python dependencies
        run: python -m pip install --upgrade pip setuptools wheel pytest
      - name: Install SWIG
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get install -y swig
      - name: Install flex/bison and SWIG
        if: matrix.os == 'macos-latest'
        run: |
          brew install bison flex swig
          echo "/usr/local/opt/bison/bin" >> $GITHUB_PATH
          echo "/usr/local/opt/flex/bin" >> $GITHUB_PATH
      - name: Install Winflexbison3
        if: matrix.os == 'windows-latest'
        shell: powershell
        run: |
          choco install winflexbison3 --version 2.5.24.20210105
      - name: Get latest CMake
        uses: lukka/get-cmake@latest
      - name: Build
        env:
          QX_CPU_COMPATIBILITY_MODE: ON
          NPROCS: 10
        run: python -m pip install --verbose .
      - name: Test
        working-directory: tests/qxelarator
        run: python -m pytest
