name: Test

on:
  push:
    branches:
      - develop
  pull_request:

jobs:
  cpp-linux-x64:
    name: "C++ tests (gcc-clang/Linux/x64)"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        build_type:
          - Debug
          - Release
        compiler:
          - clang++
          - g++
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: ./.github/actions/cpp-tests
        with:
          compiler: ${{ matrix.compiler }}
          build_type: ${{ matrix.build_type }}
          shell: bash

  cpp-macos-x64:
    name: "C++ tests (clang/MacOS/x64)"
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        build_type:
          - Debug
          - Release
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install flex/bison
        run: |
          brew install flex bison
          echo "$(brew --prefix flex)/bin" >> $GITHUB_PATH
          echo "$(brew --prefix bison)/bin" >> $GITHUB_PATH
      - uses: ./.github/actions/cpp-tests
        with:
          compiler: clang++
          build_type: ${{ matrix.build_type }}
          shell: bash

  cpp-windows-x64:
    name: "C++ tests (msvc/Windows/x64)"
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        build_type:
          - Debug
          - Release
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Winflexbison3
        run: choco install winflexbison3 --version 2.5.24.20210105
        shell: powershell
      - uses: ./.github/actions/cpp-tests
        with:
          compiler: msvc
          build_type: ${{ matrix.build_type }}
          shell: powershell

  cpp-linux-arm64:
    name: "C++ tests (gcc/Linux/ARM64)"
    runs-on: [self-hosted, ARM64, Linux]
    if: false
    container: quay.io/pypa/manylinux_2_28_aarch64:latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install flex/bison, and gcc
        run: |
          dnf install -y flex bison swig cmake
        shell: bash
      - uses: ./.github/actions/cpp-tests
        with:
          compiler: g++
          build_type: Release
          shell: bash

  cpp-macos-arm64:
    name: "C++ tests (clang/macos/ARM64)"
    runs-on: [self-hosted, ARM64, macOS]
    if: false
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install flex/bison, and gcc (MacOS)
        run: |
          brew install flex bison gcc
          echo "$(brew --prefix flex)/bin" >> $GITHUB_PATH
          echo "$(brew --prefix bison)/bin" >> $GITHUB_PATH
        shell: bash
      - uses: ./.github/actions/cpp-tests
        with:
          compiler: clang++
          build_type: Release
          shell: bash

  python-linux-x64:
    name: "Python tests (Linux/x64)"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install SWIG
        run: |
          sudo apt-get install -y swig
        shell: bash
      - uses: ./.github/actions/cpp-tests
        with:
          shell: bash

  python-macos-x64:
    name: "Python tests (macOS/x64)"
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install SWIG
        run: |
          brew install bison flex swig
          echo "/usr/local/opt/bison/bin" >> $GITHUB_PATH
          echo "/usr/local/opt/flex/bin" >> $GITHUB_PATH
        shell: bash
      - uses: ./.github/actions/cpp-tests
        with:
          shell: bash

  python-windows-x64:
    name: "Python tests (Windows/x64)"
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install SWIG
        run: |
          choco install winflexbison3 --version 2.5.24.20210105
        shell: powershell
      - uses: ./.github/actions/cpp-tests
        with:
          shell: powershell

  complete:
    # see https://github.community/t/status-check-for-a-matrix-jobs/127354/7
    name: Report status
    needs:
      - cpp-linux-x64
      - cpp-macos-x64
      - cpp-windows-x64
      # - cpp-linux-arm64
      # - cpp-macos-arm64
      - python-linux-x64
      - python-macos-x64
      - python-windows-x64
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
      - name: Check all job status
        # see https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#needs-context
        # see https://stackoverflow.com/a/67532120/4907315
        if: >-
          ${{
               contains(needs.*.result, 'failure')
            || contains(needs.*.result, 'cancelled')
            || contains(needs.*.result, 'skipped')
          }}
        run: exit 1
